/*************************************************************************************** 
 *
 * 规律：
 * f(0) = 1
 * f(1) = 1
 * f(2) = f(0)*f(1) (1为根节点) + 
 *        f(1)*f(0) (2为根节点)
 * f(3) = f(0)*f(2) (1为根节点) +
 *        f(1)*f(1) (2为根节点) +
 *        f(2)*f(0) (3为根节点)
 * f(4) = f(0)*f(3) (1为根节点) +
 *        f(1)*f(2) (2为根节点) +
 *        f(2)*f(1) (3为根节点) +
 *        f(3)*f(0) (4为根节点)
 * f(n) = f(0)*f(n-1) +
 *        f(1)*f(n-2) +
 *        ...
 *        f(n-1)*f(0)
 *
 * 时间复杂度O(n)，空间复杂度O(n)。
 *
 ***************************************************************************************/

class Solution {
public:
    int numTrees(int n) {
        if (n <= 1) {
            return 1;
        }
        std::vector<int> count(n + 1, 0);
        count[0] = 1;
        count[1] = 1;
        for (int i = 2; i <= n; ++i) {
            for (int j = 0; j < i; ++j) {
                count[i] += count[j] * count[i-j-1];
            }
        }
        return count[n];
    }
};
